name: Build and Package Extensions

on:
  pull_request:
  workflow_dispatch:

jobs:
  build-zips:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and Package Extensions
        run: pnpm zip:all

      - name: Debug - List output directory
        run: |
          echo "=== Contents of .output directory ==="
          ls -la .output/ || echo "No .output directory found"
          echo "=== All zip files in project ==="
          find . -name "*.zip" -type f || echo "No zip files found"

      - name: Copy chrome-mv3 and firefox-mv2 to artifacts directory
        run: |
          mkdir -p artifacts/chrome-mv3 artifacts/firefox-mv2
          cp -r .output/chrome-mv3/* artifacts/chrome-mv3/ || echo "Warning: .output/chrome-mv3 missing or empty"
          cp -r .output/firefox-mv2/* artifacts/firefox-mv2/ || echo "Warning: .output/firefox-mv2 missing or empty"

      - name: Extract name and version from package.json
        id: extract_pkg
        shell: node
        run: |
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json', 'utf-8'));
          if (!pkg.name || !pkg.version) {
            console.error('package.json missing name or version');
            process.exit(1);
          }
          const name = pkg.name.trim();
          const version = pkg.version.trim();
          require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `name=${name}\nversion=${version}\n`);

      - name: Debug extracted values
        run: |
          echo "Package name: '${{ steps.extract_pkg.outputs.name }}'"
          echo "Package version: '${{ steps.extract_pkg.outputs.version }}'"

      - name: Upload Chrome extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: '${{ steps.extract_pkg.outputs.name }}-${{ steps.extract_pkg.outputs.version }}-chrome-mv3'
          path: artifacts/chrome-mv3/*

      - name: Upload Firefox extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: '${{ steps.extract_pkg.outputs.name }}-${{ steps.extract_pkg.outputs.version }}-firefox-mv2'
          path: artifacts/firefox-mv2/*

  report:
    needs: [build-zips]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Report failure
        run: |
          echo "‚ùå Build or packaging failed."
          echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
