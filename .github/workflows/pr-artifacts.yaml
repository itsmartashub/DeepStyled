name: Build Extension Artifacts

# on:
#   push:
#     branches: [main, develop]
#   pull_request:
#     branches: [main]
#   release:
#     types: [published]
on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build extensions
        run: |
          pnpm build
          pnpm build:firefox

      - name: Extract package info
        id: package
        run: |
          echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      # These create artifacts with RAW UNCOMPRESSED files inside
      # GitHub automatically zips the artifact for download, but contents are uncompressed
      - name: Create Chrome artifact (raw files)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-chrome
          path: .output/chrome-mv3/
          retention-days: 30
          compression-level: 0 # Minimal compression for faster processing

      - name: Create Firefox artifact (raw files)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-firefox
          path: .output/firefox-mv2/
          retention-days: 30
          compression-level: 0 # Minimal compression for faster processing


      # Optional: Create release assets for tagged releases
      # - name: Create release zips
      #   if: github.event_name == 'release'
      #   run: |
      #     cd .output
      #     zip -r ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-chrome.zip chrome-mv3/*
      #     zip -r ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-firefox.zip firefox-mv2/*

      # - name: Upload release assets
      #   if: github.event_name == 'release'
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: .output/${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-chrome.zip
      #     asset_name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-chrome.zip
      #     asset_content_type: application/zip

      # - name: Upload Firefox release asset
      #   if: github.event_name == 'release'
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: .output/${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-firefox.zip
      #     asset_name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}-firefox.zip
      #     asset_content_type: application/zip
